<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
	<connectionStrings>
		<add name="ConnStr" connectionString="data source=.\SQLEXPRESS;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|Northwind.mdf;User Instance=true" providerName="System.Data.SqlClient"/>
	</connectionStrings>
	<appSettings>
		<!-- 
      Used to define which DB layer class should be loaded and used. 
      Valid customer values include:  Data.CustomerDBSprocs, Data.CustomerDBLINQ, Data.CustomerDBLambda
      Valid order values include: Data.OrderDBSprocs, Data.OrderDBLINQ, Data.OrderDBLambda
    -->
		<add key="CustomerDBType" value="Data.CustomerDBLINQ"/>
		<add key="OrderDBType" value="Data.OrderDBLINQ"/>
		<!-- When the following key is set to "true" ensure that EnablePartialRendering is set to false on the Default.aspx ScriptManager control -->
		<add key="EnableDataContextLogging" value="false"/>
	</appSettings>
	<system.web>
		<!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
		<compilation debug="true" targetFramework="4.0">
		</compilation>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
		<authentication mode="Windows"/>
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/></system.web>
</configuration>
